								BUGS ENCONTRADOS (ERRORES A ARREGLAR)
*[Fixed]Al hacer clic en el boton "Vaciar Tabla" se vacía el localstorage y se elimina el nodo <tbody> de <table> a traves de la propiedad tabla.lastChild.remove(). Esto funciona bien la primera vez pero al presionar nuevamente el boton elimina el nodo <thead>.

*[FIXED]Al cargar el fichero data.csv y luego de agregarse los datos al local storage, la tabla se actualiza y muestra los nuevos valores, pero el inputFile no se oculta, solo se oculta al refrescar la pagina con F5.

*Al tener dos ventanas de la aplicación en el mismo navegador, al vaciar la tabla en la primera, hay que refrescar manualmente la segunda ventana para que se visualisen los nuevos cambios.

*[Fixed]Al eliminar un elemento en la fila "f" de la tabla se elimina tambien del local storage el par k-v que se encuentra en la posicion f. Al visualizar los cambios, la tabla muestra "undefined" en la fila que recién eliminamos. En el diseño hicimos que las filas de la tabla coincidieran en posición con los elementos del local storage. Se corrigió localStorage[i] por localStorage[llave], logrando que no aparecieran valores undefined en la tabla, pero ahora los elementos de la tabla aparecen desorganizados

*[Fixed]nextAvailableKey = llaves[llaves.length-1] + 1; Arreglar esto. Al eliminar varios elementos pudiera modificar una llave ya existente al agregar un elemento

OJO: Para ordenar un array numerico: array.sort((a, b) => a - b); En caso de no poner los parámetros ordena alfabeticamente.

*[Fixed] Ordenar las llaves de los covers. Como las llaves son string, definir funcion de ordenamiento personalizada.

Clases CSS para la cantidad de covers:
0 Agotado --------- red
(0;5] Escaso ------ orangered
(5;15] Suficiente-- forestgreen
(15;25] Abundante-- darkcyan
(25;+∞) Exceso ---- darkblue

*[FIXED]Se necesita agregar a los botones + y - la escucha de evento click para que actualizen el valor de "CANTIDAD". Hay que hacerlo desde Javascript ya que esos botones fueron generados dinámicamente en la funcion crearTabla(), la cual construye el nodo <table>. Hay que esperar que el nodo <table> esté completamente creado y luego a través del DOM seleccionar fila a fila document.querySelectorAll("tr"); y agregar la escucha de evento. Hay que precisar bien el mejor lugar para agregar la escucha, logicamente hay que agregarlos luego de crear el nodo <table> y despues de una adición cover. O sea cada vez que se generen nuevos botones - o +.

*Al vaciar las tablas se vacía todo el localStorage para ambas tablas: productos y covers. Hay que evitar que se vacíen ambas a la vez

*[FIXED]En covers.html verificar el boton Editar. Seleccionando la opcion = 3. Resuelto: faltaban las sentencias break; en la instrucción switch.

*[FIXED]Al presionar el boton Editar seleccionando numero:1 Opción: e insertando el valor 0 . La página no se autorefresca. Luego al tratar de incrementar de uno a uno la cantidad a traves del boton de incremento se duplica la fila

QUIZAS: Cambiar celdas[0].textContent  por celdas[0].innerHTML

*[FIXED]Caso de USO: Editar Numero=1 Opcion=3 Valor=0. Acto seguido incrementar por el boton de incremento

*[FIXED]Revisar validacion del NuevoProducto()

//////////////////////  Contabilidad.html ///////////////////////////////
*[FIXED]Evitar que el usuario pueda teclar números negativos o números mayores que el maximo establecido.
	- Evitar que el usuario pueda insertar valores en los inputs: inversion y Ganancia que sean mayores al valor del input precio
*[SE QUEDA ASI. ME GUSTA EFECTO]Al seleccionar una opcion de autocompletado en el nombre de producto, el fondo del input se cambia a color blanco
*[FIXED] Al cargar la pagina el input type date muesta un día por delante del dia de hoy. Sin embargo al hacerle click y seleccionar el boton "Hoy" se muestra correctamente
*[FIXED] El datalist funciona solo para el elemento por defecto. Para que funcione para los otros hay que agregar el datalist cada vez que se agregue un new elto.
*[FIXED] Al agregar un nuevo producto se le agrega como hijo el <datalist>, pero se desagrega del anterior, no pueden haber nodos repetidos. Siempre se queda en el último. El problema es que al eliminar nodo, se elimina tambien el datalist y los restantes productos pierden las opciones.
* [OK]Destacar los inputs que falten valores cambiandoles el background a color rojo. Al rellenarlo volver a su background original
*[FIXED]Evitar que el usuario borre toda la información tecleada por accidente, ya sea al refrescar la página o al hacer click en el botón Limpiar. Capturar el evento y pedir confirmacion (prompt).
* [FIXED]Falta funcionalidad agregar servicio.
* [FIXED]Validar input servicio para que no tome valores negativos
* [FIXED]Evitar que al tener productos y servicios en la lista, el contador que aparece en el placeholder del input nombre de los productos mostrará valores erroneos. 
* [FIXED]Re-implementar el boton "Calcular", teniendo en cuenta la aparición del servicio.
* [FIXED]Diferenciar(agregar .incompleto) las inputs vacias luego de mandar a calcular.
*[OK] Boton IMPRIMIR. Agregar guardad como PDF.
* Agregar agregar al localStorage los records de ganancia/inversion diario. Para poder visualizarlos en una gráfica y sacar el promedio de ganancia.
* [OK]Agregar tabla de productos y servicios al PDF.
*[YA SE VALIDA EN EL BOTON CALCULAR] Agregar validacion para que antes de IMPRIMIR pdf, se haya calculado correctamente el cuadre
*[OK] Implementar eliminar producto en el modal
*[OK] Implementar modal para agregar nuevo producto:
	-[OK] Diseñar y maquetar modal.
	-[OK] Agregar eventos del modal.
*[FIXED] Al hacer click en una fila de la tabla se muestra el modal Editar Producto. Al modificar la información del producto, esta se guarda correctamente en el localstorage y en el DOM; pero al volver a clickear el mismo producto, el modal se muestra con la información vieja. Incluso al cambiar varias veces el modal siempre aparece con la información mas antigua, la que tenía originalmente. 
/////////////////////////////////////////////////////////////////////

* Animar el banner. Hacer animación que alterne entre las imágenes con un intervalo de 2 segundos
* Agregar Tabla Total de Covers. El total es la sumatoria de la columna Cantidad.
* Agregar popups para las avisar que la operación(agregar, eliminar, editar) se ejecutó correctamente. Tip: Que el popup desaparezca a los 2 seg.

*[OK] Reimplementar el metodo crearTabla() evitando usar innerHTML. Crear dinamicamente la tabla a traves de document.createElement().
*[FIXED] Evitar que al hacer click en los botones - y + de cantidad se muestre el modal de editar cover. (Como los botones son parten de la fila comparten el evento click. Buscar una forma de que solo se ejecute su propio evento click y no el del nodo padre tr) 
*[OK] Que los botones + y - de la tabla de covers modifiquen la cantidad sin recargar la pagina. Lograr que los colores de cantidad tambien se actualizen.
*[OK] Usar REGEX para validar los inputs de los modales.
* Al mostrar el modalNuevoCover que el h2 muestre la numeración que tendrá en la tabla el nuevo cover. Pudiera ser mejor mostrarlo luego de agregado como un popup.
*[OK] Agregar escucha de evento 'click' para los botones - y + del nuevo cover.
*[OK] Agregar escucha de evento 'click' para la fila de la tabla del nuevo cover.
* Evitar que cada vez que el usuario refresque la página se agregen los eventos de las filas si ya fueron agregados previamente. Esto mejora grandemente la eficiencia.
* Los inputs numericos se validan con la siguiente REGEX: replace(/[^0-9]/g, '') Pero al insertar un '.' el cursor de escritura se coloca al principio. Lograr que al presionar '.' limpie el input como los demas caracteres no permitidos.
*[OK] Maquetar los modales editarCover y nuevoCover.
*[FIXED] Al hacer click en el boton NUEVO sin existir datos cargados: Uncaught TypeError: Cannot read properties of null (reading 'appendChild')
    at HTMLButtonElement.<anonymous> (script.js:163:15)
*[FIXED] Al cargar el data_covers.csv desde la pagina Inicio da acceso a null.
* No dejar cargar un fichero CSV hasta que se halla vaciado la tabla. Tip: Ocultar boton Abrir Archivo.
*[FIXED] El array 'llaves' se está llenando de valores NaN cuando se cargan los ficheros. (index.html)
*[FiXED] Ver si es necesario refrescar la pagina index.html en el metodo 'leerFichero'. NO HACE FALTA.
* Estando la tabla vacía, al agregar un nuevo producto se agrega en la llave 0. Tip: Revisar variable 'nextAvailableKey'
*[FIXED] Al abrir el choseFile y Cancelar da el error:
	Uncaught TypeError: Failed to execute 'readAsText' on 'FileReader': parameter 1 is not of type 'Blob'.
    at HTMLInputElement.leerFichero (script.js:237:12)
leerFichero @ script.js:237
*[FIXED] Al Crear de 0 la tabla. Al insertar la primera fila (primera llave), insertar primero la llave 0 o c0.
*[OK] No permitir la insercion de llaves repetidas en el array llaves. Sustituir las existentes. Se mejoró la interfaz visual para evitar que se cargue un fichero cuando ya existen da
*[FIXED] En covers.html al insertar el primer cover ocultar los botones de 'Abrir Archivo'
*[FIXED] Al hacer click en 'Vaciar Tabla' de index.html se vacía todo el localStorage incluidos los datos de los covers. Lograr que se vacíe solo la parte del localStorage correspondiente a la tabla actual.
*[FIXED] Al cargar el fichero data_covers.csv no agrega la clase 'coverAgotado' a la fila cuyo producto tiene cantidad 0. Solo la agrega al refrescar la página.
*[OK] Agregar tabla de total de covers.
*[FIXED] Al cargar el fichero de los covers y hacer click en una en  botones (+) o (-) no disminuye la cantidad, sólo muestra el modal de editar cover.
*[FIXED] Que la tabla de los totales se actualize luego de un cambio en la cantidad de covers.
* Agregar 'Total de Dinero A Generar' en la tabla GENERALIDADES COVER. Calcular Ʃcover*cantidad
*[FIXED] Luego de una insercion de cover al hacer clic en la fila del cover se muestra en el modalEditCov '[object HTMLTableCellElement]'. Faltaba aplicar .textContent